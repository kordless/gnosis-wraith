version: "3.8"

services:
  wraith:
    build: .
    container_name: wraith-service
    ports:
      - "5678:5678"
    volumes:
      - ./storage:/data
      - ./host-files:/host-files
    restart: unless-stopped
    environment:
      - GNOSIS_WRAITH_STORAGE_PATH=/data
      - QUART_APP=app:app
      - QUART_ENV=production
      - RUNNING_IN_CLOUD=false
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ENABLE_USER_PARTITIONING=true
    depends_on:
      - redis
    profiles: [cpu]

  wraith-gpu:
    build: .
    container_name: wraith-service-gpu
    ports:
      - "5678:5678"
    volumes:
      - ./storage:/data
      - ./host-files:/host-files
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu, utility, compute]
    environment:
      - GNOSIS_WRAITH_STORAGE_PATH=/data
      - QUART_APP=app:app
      - QUART_ENV=production
      - NVIDIA_VISIBLE_DEVICES=all
      - RUNNING_IN_CLOUD=false
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ENABLE_USER_PARTITIONING=true
    depends_on:
      - redis
    profiles: [gpu]

  redis:
    image: redis:6-alpine
    container_name: wraith-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # For development, an admin UI for Redis
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: wraith-redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    profiles: [dev]

volumes:
  redis-data:
    driver: local
